version: "3"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    container_name: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    restart: always

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: datanode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    env_file:
      - ./hadoop.env
    restart: always

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop2.7.4-java8
    container_name: resourcemanager
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075"
    env_file:
      - ./hadoop.env
    restart: always
  
  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop2.7.4-java8
    container_name: nodemanager
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    restart: always
  
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop2.7.4-java8
    container_name: historyserver
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    restart: always

  hbase:
    image: bde2020/hbase-standalone:1.0.0-hbase1.2.6
    container_name: hbase
    volumes:
      - hbase_data:/hbase-data
      - hbase_zookeeper_data:/zookeeper-data
      - ./hbase/conf/hbase-env.sh:/opt/hbase-1.2.6/conf/hbase-env.sh
    ports:
      - 16000:16000
      - 16010:16010
      - 16020:16020
      - 16030:16030
      - 2888:2888
      - 3888:3888
      - 2181:2181
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075"
    env_file:
      - ./hbase.env
    restart: always

  java_executor:
    image: openjdk:18-jdk-slim-buster
    user: "1000:1000"
    volumes:
      - ./pilot-pjt:/pilot-pjt
    working_dir: /pilot-pjt

  zookeeper:
    image: zookeeper:3.4.14
    platform: linux/amd64  # for mac
    restart: always

  kafka:
    image: confluentinc/cp-server:6.1.1
    platform: linux/amd64  # for mac
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: rack-1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONFLUENT_SUPPORT_CUSTOMER_ID: "kafka"
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic smartcar --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
  
  schema-registry:
    image: confluentinc/cp-schema-registry:6.1.10
    platform: linux/amd64  # for mac
    depends_on:
    - kafka        
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    restart: always

  fluent-bit:
    image: fluent/fluent-bit:2.0.8
    user: "1000:1000"
    platform: linux/amd64  # for mac
    restart: always
    depends_on:
      - init-kafka
    volumes:
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./fluent-bit/driver-realtime-log.conf:/fluent-bit/etc/driver-realtime-log.conf
      - ./fluent-bit/smartcar.conf:/fluent-bit/etc/smartcar.conf
      - ./pilot-pjt:/pilot-pjt

  redis:
    image: redis:6.2.5
    platform: linux/amd64  # for mac
    restart: always
    ports:
      - 6379:6379

  storm-nimbus:
    image: storm:1.2.4
    command: storm nimbus
    depends_on:
      - zookeeper
    restart: always
    ports:
      - 6627:6627
    volumes:
      - ./pilot-pjt:/pilot-pjt

  storm-supervisor:
    image: storm:1.2.4
    command: storm supervisor
    depends_on:
      - storm-nimbus
      - zookeeper
    links:
      - storm-nimbus:nimbus
    restart: always
    volumes:
      - ./pilot-pjt:/pilot-pjt
  
  storm-ui:
    image: storm:1.2.4
    command: storm ui
    depends_on:
      - storm-nimbus
    links:
      - storm-nimbus:nimbus
    ports:
      - 8080:8080
    restart: always
    volumes:
      - ./pilot-pjt:/pilot-pjt

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  hbase_data:
  hbase_zookeeper_data: